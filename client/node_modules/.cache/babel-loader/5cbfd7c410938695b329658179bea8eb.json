{"ast":null,"code":"import _toConsumableArray from \"/c/Users/lil58/workspace/Tennis/tennis/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this;\n\nvar events = function events() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_EVENT':\n      return [].concat(_toConsumableArray(state), [action.payload.event]);\n\n    case 'DELETE_EVENT':\n      var array = _toConsumableArray(state.events); // make a separate copy of the array\n\n\n      var index = array.indexOf(action.payload.id);\n\n      if (index !== -1) {\n        array.splice(index, 1);\n\n        _this.setState({\n          events: array\n        });\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default events;","map":{"version":3,"sources":["/c/Users/lil58/workspace/Tennis/tennis/src/reducer/event.js"],"names":["events","state","action","type","payload","event","array","index","indexOf","id","splice","setState"],"mappings":";;;;AAAA,IAAMA,MAAM,GAAG,SAATA,MAAS,GAAuB;AAAA,MAAtBC,KAAsB,uEAAd,EAAc;AAAA,MAAVC,MAAU;;AACrC,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,WAAL;AACC,0CAAWF,KAAX,IAAiBC,MAAM,CAACE,OAAP,CAAeC,KAAhC;;AACD,SAAK,cAAL;AAEC,UAAIC,KAAK,sBAAOL,KAAK,CAACD,MAAb,CAAT,CAFD,CAEgC;;;AAC/B,UAAIO,KAAK,GAAGD,KAAK,CAACE,OAAN,CAAcN,MAAM,CAACE,OAAP,CAAeK,EAA7B,CAAZ;;AACA,UAAIF,KAAK,KAAK,CAAC,CAAf,EAAkB;AACjBD,QAAAA,KAAK,CAACI,MAAN,CAAaH,KAAb,EAAoB,CAApB;;AACA,QAAA,KAAI,CAACI,QAAL,CAAc;AAACX,UAAAA,MAAM,EAAEM;AAAT,SAAd;AACA;;AACD,aAAOL,KAAP;;AACD;AACC,aAAOA,KAAP;AAbF;AAeA,CAhBD;;AAkBA,eAAeD,MAAf","sourcesContent":["const events = (state = [], action) =>{\r\n\tswitch(action.type){\r\n\t\tcase 'ADD_EVENT':\r\n\t\t\treturn [...state,action.payload.event];\r\n\t\tcase 'DELETE_EVENT':\r\n\r\n\t\t\tvar array = [...state.events]; // make a separate copy of the array\r\n\t\t\tvar index = array.indexOf(action.payload.id);\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tarray.splice(index, 1);\r\n\t\t\t\tthis.setState({events: array});\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default events;\r\n"]},"metadata":{},"sourceType":"module"}