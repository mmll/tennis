{"ast":null,"code":"import _toConsumableArray from \"/c/Users/lil58/workspace/Tennis/tennis/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar events = function events() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_EVENT':\n      var _event = action.event;\n      return [].concat(_toConsumableArray(state), [{\n        event: 'test'\n      }]);\n\n    default:\n      return state;\n  }\n};\n\nexport default event;","map":{"version":3,"sources":["/c/Users/lil58/workspace/Tennis/tennis/src/reducer/event.js"],"names":["events","state","action","type","event"],"mappings":";;AAAA,IAAMA,MAAM,GAAG,SAATA,MAAS,GAAuB;AAAA,MAAtBC,KAAsB,uEAAd,EAAc;AAAA,MAAVC,MAAU;;AACrC,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,WAAL;AACC,UAAIC,MAAK,GAAGF,MAAM,CAACE,KAAnB;AACA,0CAAWH,KAAX,IAAiB;AAACG,QAAAA,KAAK,EAAE;AAAR,OAAjB;;AACD;AACC,aAAOH,KAAP;AALF;AAOA,CARD;;AAUA,eAAeG,KAAf","sourcesContent":["const events = (state = {}, action) =>{\r\n\tswitch(action.type){\r\n\t\tcase 'ADD_EVENT':\r\n\t\t\tlet event = action.event;\r\n\t\t\treturn [...state,{event: 'test'}];\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default event;\r\n"]},"metadata":{},"sourceType":"module"}